warning("No degrees of freedom parameter is larger than 'maxdf'. The original model is returned.")
return(list(params=params, reg_order=1:M))
}
regs_to_change <- which(dfs > maxdf)
if(length(regs_to_change) == M) message("All regimes are changed GMAR type. Thus the result is a GMAR model and not a G-StMAR model.")
alphas <- pick_alphas(p, M, params, model="StMAR", restricted=restricted, constraints=constraints)
all_regs <- lapply(1:M, function(i1) {
reg <- extractRegime(p, M, params, model="StMAR", restricted=restricted,
constraints=constraints, regime=i1)
reg[-length(reg)]
})
reg_order <- c(regs_to_change[order(alphas[regs_to_change], decreasing=TRUE)], # GMAR type regimes
(1:M)[-regs_to_change][order(alphas[-regs_to_change], decreasing=TRUE)]) # StMAR type regimes
tmp_pars <- unlist(all_regs[reg_order])
if(!is.null(constraints) & any(reg_order != 1:M)) {
message(paste0("Order of the constraint matrices for was changed to ", toString(reg_order), "."))
}
if(restricted == TRUE) { # Add the missing AR parameters
q <- ifelse(is.null(constraints), p, ncol(constraints))
tmp_pars <- c(tmp_pars[seq(from=1, to=2*M, by=2)],
params[(M + 1):(M + q)],
tmp_pars[seq(from=2, to=2*M, by=2)])
}
if(length(regs_to_change) == M) {
new_dfs <- numeric(0)
} else {
new_dfs <- dfs[-regs_to_change][order(reg_order[(length(regs_to_change) + 1):M], decreasing=FALSE)]
}
pars <- c(tmp_pars, alphas[reg_order][-M], new_dfs)
return(list(params=pars, reg_order=reg_order, M=c(length(regs_to_change), M - length(regs_to_change))))
}
stmarpars_to_gstmar(1, 2, params12, maxdf=100)
stmarpars_to_gstmar(1, 2, params12, maxdf=1000)
devtools::load_all()
stmarpars_to_gstmar(1, 2, params12, maxdf=1000)
rm(stmarpars_to_gstmar())
rm(stmarpars_to_gstmar
)
stmarpars_to_gstmar(1, 2, params12, maxdf=1000)
stmarpars_to_gstmar(3, 3, pars33tc, constraints=list(R2, R2, R1), maxdf=11)$M
devtools::test()
new_params <- stmarpars_to_gstmar(p=gsmar$model$p, M=gsmar$model$M, params=gsmar$params,
restricted=gsmar$model$restricted, constraints=gsmar$model$constraints,
maxdf=maxdf)
maxdf <- 100
new_params <- stmarpars_to_gstmar(p=gsmar$model$p, M=gsmar$model$M, params=gsmar$params,
restricted=gsmar$model$restricted, constraints=gsmar$model$constraints,
maxdf=maxdf)
new_params$M
new_params$M[2]
if(new_params$M[2] == 0) {
new_model <- "GMAR"
new_M <- new_params$M[1]
} else if(new_params$M[1] == 0) {
new_model <- "StMAR"
new_M <- new_params$M
} else {
new_model <- "G-StMAR"
new_M <- new_params$M
}
GSMAR(data=gsmar$data, p=gsmar$model$p, M=new_M, params=new_params$params,
model=new_model, restricted=gsmar$model$restricted,
constraints=new_constraints, conditional=gsmar$model$conditional,
parametrization=gsmar$model$parametrization, calc_qresiduals=FALSE,
calc_cond_moments=FALSE, calc_std_errors=FALSE)
devtools::load_all()
stmar_to_gstmar(st500)
devtools::load_all()
stmar_to_gstmar(st500)
stmar_to_gstmar(st500, maxdf=30)
stmar_to_gstmar(st500, maxdf=3)
fit12t <- fitGSMAR(logVIX, 1, 2, model="StMAR")
fit12t
fit12t$all_estimates
fit12t$all_logliks
cbind(fit12t$all_logliks, vapply(1:16, function(i1) fit12t$all_estimates[[i1]][16]))
cbind(fit12t$all_logliks, vapply(1:16, function(i1) fit12t$all_estimates[[i1]][16], numeric(1)))
cbind(fit12t$all_logliks, vapply(1:16, function(i1) fit12t$all_estimates[[i1]][9], numeric(1)))
round(cbind(fit12t$all_logliks, vapply(1:16, function(i1) fit12t$all_estimates[[i1]][9], numeric(1))), 2)
fit22t <- fitGSMAR(logVIX, 2, 2, model="StMAR")
fti22t
fit22t
fit22t$params
round(cbind(fit12t$all_logliks, vapply(1:16, function(i1) fit12t$all_estimates[[i1]][11], numeric(1))), 2)
round(cbind(fit22t$all_logliks, vapply(1:16, function(i1) fit22t$all_estimates[[i1]][11], numeric(1))), 2)
fit22t$all_estimates
fit12gt <- stmar_to_gstmar(fit12t)
fit12gt
fit12t
plot(fit12t)
plot(fit12gs)
fit12gs <- stmar_to_gstmar(fit12t)
fit12t
fit12gs
fit12tr <- fitGSMAR(logVIX, 1, 2, model="StMAR", restricted=TRUE)
fit12t
fit12tr
plot(fit12tr)
fit13tr <- fitGSMAR(logVIX, 1, 3, model="StMAR", restricted=TRUE)
fit13tr
fit13tr$all_logliks
fit13tr$all_estimates
plot(fit13tr)
summary(fit13tr)
fit13gsr <- stmar_to_gstmar(fit13tr)
gsmar <- fit13tr
ifelse(is.null(gsmar$data), FALSE, TRUE)
fit13tr
fit13gsr
get_gradient(fit13tr)
get_gradient(fit13gsr)
devtools::load_all()
constraints <- list(matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
fit31tc <- fitGSMAR(logVIX, 3, 1, model="StMAR", constraints=constraints)
fit31c
fit31tc
fit31tc
fit31tc <- fitGSMAR(logVIX, 3, 1, model="StMAR", constraints=constraints, ncalls=3)
fit31tc
gsmar <- fit31tc
?removeAllConstraints
devtools::load_all()
devtools::load_all()
fit31tc <- fitGSMAR(logVIX, 3, 1, model="StMAR", constraints=constraints, ncalls=3)
fit31tc
stmar_to_gstmar(fit31tc, maxdf=3)
stmar_to_gstmar(fit31tc, maxdf=100)
gsmar <- fit31tc
new_params <- stmarpars_to_gstmar(p=gsmar$model$p, M=gsmar$model$M, params=gsmar$params,
restricted=gsmar$model$restricted, constraints=gsmar$model$constraints,
maxdf=maxdf)
new_params
if(is.null(constraints)) {
new_constraints <- NULL
} else {
new_constraints <- gsmar$model$constraints[new_params$reg_order]
}
if(new_params$M[2] == 0) {
new_model <- "GMAR"
new_M <- new_params$M[1]
} else if(new_params$M[1] == 0) {
new_model <- "StMAR"
new_M <- new_params$M
} else {
new_model <- "G-StMAR"
new_M <- new_params$M
}
if(estimate == TRUE) {
tmp_mod <- GSMAR(data=gsmar$data, p=gsmar$model$p, M=new_M, params=new_params$params,
model=new_model, restricted=gsmar$model$restricted,
constraints=new_constraints, conditional=gsmar$model$conditional,
parametrization=gsmar$model$parametrization, calc_qresiduals=FALSE,
calc_cond_moments=FALSE, calc_std_errors=FALSE)
new_mod <- iterate_more(tmp_mod, maxit=maxit)
} else {
new_mod <- GSMAR(data=gsmar$data, p=gsmar$model$p, M=new_M, params=new_params$params,
model=new_model, restricted=gsmar$model$restricted,
constraints=new_constraints, conditional=gsmar$model$conditional,
parametrization=gsmar$model$parametrization, calc_std_errors=calc_std_errors)
}
new_mod
tmp_mod <- GSMAR(data=gsmar$data, p=gsmar$model$p, M=new_M, params=new_params$params,
model=new_model, restricted=gsmar$model$restricted,
constraints=new_constraints, conditional=gsmar$model$conditional,
parametrization=gsmar$model$parametrization, calc_qresiduals=FALSE,
calc_cond_moments=FALSE, calc_std_errors=FALSE)
new_params
new_params$M[2] == 0
new_params$M
new_params$M[1]
new_params$M[1] == 0
devtools::load_all()
stmar_to_gstmar(fit31tc, maxdf=100)
fit32trc <- fitGSMAR(logVIX, 3, 2, model="StMAR", restricted=TRUE,
constraints=matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
fit32trc
stmar_to_gstmar(fit32trc)
TRUE || FALSE
FALSE || TRUE
devtools::load_all()
stmar_to_gstmar(fit32trc)
fit32trc
stmar_to_gstmar(fit31tc)
stmar_to_gstmar(fit12t)
stmar_to_gstmar(fit12t, maxdf=1)
stmar_to_gstmar(fit12t, maxdf=100)
stmar_to_gstmar(fit12t, maxdf=100000)
stmar_to_gstmar(fit12t, maxdf=1000000)
stmar_to_gstmar(fit32trc)
stmar_to_gstmar(fit32trc, maxdf=1)
stmar_to_gstmar(fit32trc, maxdf=10000000)
formals(GAfit)
names(formals(GAfit))
dot_params
c("data", "kakaa") %in% names(formals(GAfit))
c("data", "kakaa")[!c("data", "kakaa") %in% names(formals(GAfit))]
c("data", "p")[!c("data", "p") %in% names(formals(GAfit))]
to_string(c("a", "v"))
toString(c("a", "v"))
devtools::load_all()
fit12 <- fitGSMAR(data=logVIX, p=1, M=2, nCalls=3)
fit12 <- fitGSMAR(data=logVIX, p=1, M=2, nCalls=3, inipop="pöö")
devtools::load_all()
fit12 <- fitGSMAR(data=logVIX, p=1, M=2, nCalls=3, nCores=3)
devtools::load_all()
devtools::load_all()
fit12 <- fitGSMAR(data=logVIX, p=1, M=2, nCalls=3, nCores=3)
devtools::load_all()
fit12 <- fitGSMAR(data=logVIX, p=1, M=2, nCalls=3, nCores=3)
devtools::load_all()
fit12 <- fitGSMAR(data=logVIX, p=1, M=2, nCalls=3, nCores=3)
devtools::test()
devtools::use_readme_rmd()
usethis::use_readme_rmd()
install.packages("rmarkdown")
usethis::use_readme_rmd()
fit12 <- fitGSMAR(data=logVIX, p=1, M=2)
fit12
diagnosticPlot(fit12)
data(logVIX, package="uGMAR")
fit12 <- fitGSMAR(data=VIX, p=1, M=2, model="GMAR")
fit12
plot(fit12)
fit <- fit12
get_gradient(fit)
get_soc(fit)
summary(fit)
quantileResidualPlot(fit)
diagnosticPlot(fit)
qrt <- quantileResidualTests(fit)
sim <- simulateGSMAR(fit, nsimu=10)
sim
pred <- predict(fit, n_ahead=10)
predict(fit, n_ahead=10)
?logVIX
devtools::document()
?logVIX
fit <- fitGSMAR(data=logVIX, p=1, M=2, model="GMAR")
fit
summary(fit) # Approximate standard errors in brackets
plot(fit)
get_gradient(fit) # The first order condition
get_soc(fit) # The second order condition (eigen values of approximated Hessian)
quantileResidualPlot(fit)
diagnosticPlot(fit)
qrt <- quantileResidualTests(fit)
sim <- simulateGSMAR(fit, nsimu=10)
sim
predict(fit, n_ahead=10)
devtools::use_news_md()
usethis::use_news_md()
usethis::use_news_md()
fit12 <- fitGSMAR(logVIX, 1, 2, maxit=1, ngen=50)
fit12 <- fitGSMAR(logVIX, 1, 2, maxit=1, ngen=50, ncalls=3)
fit12
devtools::load_all()
devtools::load_all()
fit12 <- fitGSMAR(logVIX, 1, 2, maxit=1, ngen=50, ncalls=3)
fit12 <- iterate_more(fit12)
fit12
params12
round(fit12$params)
round(fit12$params, 2)
round(fit12$params, 3)
diagnosticPlot(fit12)
fit12r <- fitGSMAR(logVIX, 1, 2, model="GMAR", restricted=TRUE)
diagnosticPlot(fit12r, nlags=10, nsimu=1, plot_indstats=TRUE)
devtools::load_all()
diagnosticPlot(fit12r, nlags=10, nsimu=1, plot_indstats=TRUE)
fit11t <- fitGSMAR(logVIX, 1, 1, model="StMAR", ncores=1, ncalls=1)
diagnosticPlot(fit11t)
fit12gs <- fitGSMAR(logVIX, 1, M=c(1, 1), model="G-StMAR", ncalls=50)
fit12gs <- fitGSMAR(logVIX, 1, M=c(1, 1), model="G-StMAR")
diagnosticPlot(fit12gs)
fit12gsr <- fitGSMAR(logVIX, 1, M=c(1, 1), model="G-StMAR",
restricted=TRUE)
diagnosticPlot(fit12gsr)
fit12c <- fitGSMAR(logVIX, 2, 2, constraints=constraints)
constraints <- list(diag(1, ncol=2, nrow=2), as.matrix(c(1, 0)))
fit12c <- fitGSMAR(logVIX, 2, 2, constraints=constraints)
diagnosticPlot(fit12c)
fit32rc <- fitGSMAR(logVIX, 3, 2, model="StMAR", restricted=TRUE,
constraints=matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
diagnosticPlot(fit32rc)
quantileResidualPlot(fit12)
quantileResidualPlot(fit11t)
quantileResidualPlot(fit12gsr)
quantileResidualPlot(fit32rc)
fit12$params
paste0(round(fit12$params, 2), ", ")
paste0(round(fit12$params, 2), ", ", collapse=TRUE)
paste0(round(fit12$params, 2), collapse=", ")
params12 <- c(0.18, 0.93, 0.01, 0.86, 0.68, 0.02, 0.88)
gmar12 <- GSMAR(data=VIX, p=1, M=2, params=params12, model="GMAR")
gmar12
paste0(round(fit12r$params, 2), collapse=", ")
gmar12 <- GSMAR(data=logVIX, p=1, M=2, params=params12, model="GMAR")
gmar12
params12r <- c(0.21, 0.23, 0.92, 0, 0.02, 0.86)
gmar12r <- GSMAR(data=logVIX, p=1, M=2, params=params12r, model="GMAR",
restricted=TRUE)
params12r <- c(0.21, 0.23, 0.92, 0.01, 0.02, 0.86)
gmar12r <- GSMAR(data=logVIX, p=1, M=2, params=params12r, model="GMAR",
restricted=TRUE)
gmar12r
params12t <- c(1.38, 0.88, 0.27, 3.8, 0.74, 3.15, 0.8, 100, 3.6)
stmar12t <- GSMAR(p=1, M=2, params=params12t, model="StMAR")
stmar12t
params12t <- c(1.38, 0.88, 0.27, 3.8, 0.74, 3.15, 0.8, 300, 3.6)
stmar12t <- GSMAR(p=1, M=2, params=params12t, model="StMAR")
stmar12t
params12gs <- c(1.38, 0.88, 0.27, 3.8, 0.74, 3.15, 0.8, 3.6)
gstmar12 <- GSMAR(p=1, M=c(1, 1), params=params12gs, model="G-StMAR")
gstmar12
stmar12t
paste0(round(fit22c$params, 2), collapse=", ")
fit12c
paste0(round(fit12c$params, 2), collapse=", ")
constraints <- list(diag(1, ncol=2, nrow=2), as.matrix(c(1, 0)))
params22c <- c(0.61, 0.83, -0.06, 0.02, 0.21, 0.91, 0.01, 0.16)
gmar22c <- GSMAR(logVIX, p=2, M=2, params=params22c,
model="GMAR", constraints=constraints)
gmar22c
paste0(round(fit32tc$params, 2), collapse=", ")
paste0(round(fit32tcr$params, 2), collapse=", ")
paste0(round(fit32trc$params, 2), collapse=", ")
params32trc <- c(0.35, 0.33, 0.88, -0.02, 0.01, 0, 0.36, 4.53, 1000)
stmar32rc <- GSMAR(logVIX, p=3, M=2, params=params32trc, model="StMAR",
restricted=TRUE, constraints=matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
params32trc <- c(0.35, 0.33, 0.88, -0.02, 0.01, 0.01, 0.36, 4.53, 1000)
stmar32rc <- GSMAR(logVIX, p=3, M=2, params=params32trc, model="StMAR",
restricted=TRUE, constraints=matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
stmar32rc
paramsHAR <- c(1, 0.1, 0.2, 0.3, 1, 2, 0.15, 0.25, 0.35, 2, 0.55)
r1 = c(1, rep(0, 21)); r2 = c(rep(0.2, 5), rep(0, 17)); r3 = rep(1/22, 22)
R0 = cbind(r1, r2, r3)
mixhar <- GSMAR(p=22, M=2, params=paramsHAR, model="GMAR", constraints=list(R0, R0))
mixhar
params12 <- c(0.18, 0.93, 0.01, 0.86, 0.68, 0.02, 0.88)
gmar12 <- GSMAR(data=logVIX, p=1, M=2, params=params12, model="GMAR")
gmar12 <- GSMAR(p=1, M=2, params=params12, model="GMAR")
gmar12
gmar12 <- add_data(data=logVIX, gmar12)
gmar12
params12 <- c(0.18, 0.93, 0.01, 0.86, 0.68, 0.02, 0.88)
gmar12 <- GSMAR(data=logVIX, p=1, M=2, params=params12, model="GMAR")
gmar12
gmar12 <- swap_parametrization(gmar12)
gmar12
params12 <- c(0.18, 0.93, 0.01, 0.86, 0.68, 0.02, 0.88)
loglikelihood(logVIX, 1, 2, params12)
params12r <- c(0.21, 0.23, 0.92, 0.01, 0.02, 0.86)
loglikelihood(logVIX, 1, 2, params12r, restricted=TRUE, minval=-9999)
paste0(round(fit11t$params, 2), collapse=", ")
params11t <- c(0.16, 0.93, 0.01, 3.01)
loglikelihood(VIX, 1, 1, params11t, model="StMAR", minval="Hello")
loglikelihood(logVIX, 1, 1, params11t, model="StMAR", minval="Hello")
loglikelihood(logVIX, 1, 1, params11t, model="StMAR", minval="Hello")
params11t <- c(0.16, 0.93, 0.00, 3.01)
loglikelihood(logVIX, 1, 1, params11t, model="StMAR", minval="Hello")
params12gs <- c(1.38, 0.88, 0.27, 3.8, 0.74, 3.15, 0.8, 3.6)
loglikelihood(logVIX, 1, c(1, 1), params12gs, model="G-StMAR")
paste0(round(fit12gs$params, 2), collapse=", ")
params12gs <- c(0.86, 0.68, 0.02, 0.18, 0.93, 0, 0.11, 44.36)
loglikelihood(logVIX, 1, c(1, 1), params12gs, model="G-StMAR")
params12gs <- c(0.86, 0.68, 0.02, 0.18, 0.93, 0.01, 0.11, 44.36)
loglikelihood(logVIX, 1, c(1, 1), params12gs, model="G-StMAR")
paste0(round(fit12gsr$params, 2), collapse=", ")
params12gsr <- c(0.31, 0.33, 0.88, 0, 0.02, 0.77, 2.72)
gstmar12r <- GSMAR(data=logVIX, p=1, M=c(1, 1), params=params12gsr,
model="G-StMAR", restricted=TRUE)
params12gsr <- c(0.31, 0.33, 0.88, 0.01, 0.02, 0.77, 2.72)
gstmar12r <- GSMAR(data=logVIX, p=1, M=c(1, 1), params=params12gsr,
model="G-StMAR", restricted=TRUE)
gstmar13r
gstmar12r
params12gsr <- c(0.31, 0.33, 0.88, 0.01, 0.02, 0.77, 2.72)
loglikelihood(logVIX, 1, c(1, 1), params12gsr, model="G-StMAR", restricted=TRUE)
constraints <- list(diag(1, ncol=2, nrow=2), as.matrix(c(1, 0)))
params22c <- c(0.61, 0.83, -0.06, 0.02, 0.21, 0.91, 0.01, 0.16)
loglikelihood(logVIX, 2, 2, params22c, constraints=constraints)
params32trc <- c(0.35, 0.33, 0.88, -0.02, 0.01, 0.01, 0.36, 4.53, 1000)
loglikelihood(logVIX, 3, 2, params32trc, model="StMAR", restricted=TRUE,
constraints=matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
mixingWeights(logVIX, 1, 2, params12)
mixingWeights(logVIX, 1, 2, params12r, restricted=TRUE)
mixingWeights(logVIX, 1, 1, params11t, model="StMAR", minval="Hello")
params11t <- c(0.16, 0.93, 0.01, 3.01)
mixingWeights(logVIX, 1, 1, params11t, model="StMAR")
mixingWeights(logVIX, 1, c(1, 1), params12gs, model="G-StMAR")
mixingWeights(logVIX, 1, c(1, 1), params12gsr, model="G-StMAR", restricted=TRUE)
constraints <- list(diag(1, ncol=2, nrow=2), as.matrix(c(1, 0)))
params22c <- c(0.61, 0.83, -0.06, 0.02, 0.21, 0.91, 0.01, 0.16)
mixingWeights(logVIX, 2, 2, params22c, constraints=constraints)
mixingWeights(logVIX, 3, 2, params32trc, model="StMAR", restricted=TRUE,
constraints=matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
params12 <- c(0.18, 0.93, 0.01, 0.86, 0.68, 0.02, 0.88)
rcm12 <- condMoments(logVIX, 1, 2, params12, to_return="regime_cmeans")
rcm12
rcv12 <- condMoments(logVIX, 1, 2, params12, to_return="regime_cvars")
tcm12 <- condMoments(logVIX, 1, 2, params12, to_return="total_cmeans")
tcv12 <- condMoments(logVIX, 1, 2, params12, to_return="total_cvars")
fit12t
fit12t$params
round(fit12t$params, 2)
params12t <- c(0.17,  0.93, 0.01, 4.87, -0.90, 0.01, 0.98, 4.22, 1000)
rcm12t <- condMoments(logVIX, 1, 2, params12t, model="StMAR",
to_return="regime_cmeans")
rcv12t <- condMoments(logVIX, 1, 2, params12t, model="StMAR",
to_return="regime_cvars")
round(fit12gs$params, 2)
params12gs <- c(0.86, 0.68, 0.02, 0.18, 0.93, 0.00, 0.11, 44)
rcv12gs <- condMoments(logVIX, 1, c(1,1), params12gs, model="G-StMAR",
to_return="regime_cvars")
params12gs <- c(0.86, 0.68, 0.02, 0.18, 0.93, 0.01, 0.11, 44)
rcv12gs <- condMoments(logVIX, 1, c(1,1), params12gs, model="G-StMAR",
to_return="regime_cvars")
tcv12gs <- condMoments(logVIX, 1, c(1,1), params12gs, model="G-StMAR",
to_return="total_cvars")
round(fit12$params, 5)
params12 <- c(0.18281, 0.92657, 0.00215, 0.85725,
0.68210, 0.01900, 0.88342)
gmar12 <- GSMAR(logVIX, 1, 2, params12)
get_gradient(gmar12)
get_gradient(fit12)
round(fit12$params, 8)
params12 <- c(0.18281409, 0.92657275, 0.00214552,
0.85725129, 0.68210294, 0.01900299, 0.88342018)
gmar12 <- GSMAR(logVIX, 1, 2, params12)
get_gradient(gmar12)
get_hessian(gmar12)
get_soc(gmar12)
params12 <- c(0.18281409, 0.92657275, 0.00214552,
0.85725129, 0.68210294, 0.01900299, 0.88342018)
gmar12 <- GSMAR(VIX, 1, 2, params12)
pred <- predict(gmar12, n_ahead=10, plotRes=FALSE)
pred <- predict(gmar12, n_ahead=1, plotRes=FALSE)
gmar12 <- GSMAR(logVIX, 1, 2, params12)
pred <- predict(gmar12, n_ahead=10, plotRes=FALSE)
plot(pred, nt=50)
pred12 <- predict(fit12, n_ahead=10)
pred12
fit12r <- fitGSMAR(logVIX, 1, 2, model="GMAR", restricted=TRUE)
pred12r <- predict(fit12r, pred_type="cond_mean", plotRes=FALSE)
pred12r
predict(fit11t, n_ahead=10, ci_type="upper", ci=c(0.99, 0.95, 0.9))
pred12gs <- predict(fit12gs, n_ahead=10, pred_type="median",
ci_type="none", plotRes=FALSE)
pred12gs
plot(pred12gs)
predict(fit32rc, n_ahead=3, ci_type="lower")
gmar12 <- GSMAR(logVIX, 1, 2, params12)
pred <- predict(gmar12, n_ahead=10, plotRes=FALSE)
pred
print(pred, digits=3)
quantileResiduals(logVIX, 1, 2, params12)
quantileResiduals(logVIX, 1, 2, params12r, restricted=TRUE)
quantileResiduals(logVIX, 1, 1, params11t, model="StMAR", minval="Hello")
params11t <- c(0.16, 0.93, 0.01, 3.01)
quantileResiduals(logVIX, 1, 1, params11t, model="StMAR")
quantileResiduals(logVIX, 1, c(1, 1), params12gs, model="G-StMAR")
quantileResiduals(logVIX, 1, c(1, 1), params12gsr, model="G-StMAR",
restricted=TRUE)
constraints <- list(diag(1, ncol=2, nrow=2), as.matrix(c(1, 0)))
params22c <- c(0.61, 0.83, -0.06, 0.02, 0.21, 0.91, 0.01, 0.16)
quantileResiduals(logVIX, 2, 2, params22c, constraints=constraints)
quantileResiduals(logVIX, 3, 2, params32trc, model="StMAR",
restricted=TRUE, constraints=matrix(c(1, 0, 0, 0, 0, 1), ncol=2))
qrtest12 <- quantileResidualTests(fit12)
qrtest12r <- quantileResidualTests(fit12r, lagsAC=1:10, nsimu=1)
plot(qrtest12r)
quantileResidualTests(fit11, lagsAC=c(1, 2, 5), nsimu=1, printRes=FALSE)
quantileResidualTests(fit11t, lagsAC=c(1, 2, 5), nsimu=1, printRes=FALSE)
quantileResidualTests(fit12gs, lagsAC=c(1, 3), lagsCH=1:2,
nsimu=1, printRes=FALSE)
quantileResidualTests(fit32rc, lagsAC=c(1, 3), nsimu=1, printRes=FALSE)
fit22c
fit12c
constraints <- list(diag(1, ncol=2, nrow=2), as.matrix(c(1, 0)))
fit22c <- fitGSMAR(logVIX, 2, 2, constraints=constraints)
quantileResidualTests(fit22c, lagsAC=c(1, 3), nsimu=1, printRes=FALSE)
devtools::test()
install.packages("cran_downloads")
install.packages("cran_logs")
install.packages("cranlogs")
cranlogs::cran_downloads("uGMAR", "last-month")
cranlogs::cran_downloads("gmvarkit", "last-month")
usethis::use_readme_rmd()
devtools::test()
params11t <- c(-2, 0.8, 1, 12)
params12 <- c(1.1, 0.9, 0.29, 4.5, 0.7, 3.2, 0.8)
params23t <- c(1.8, 0.9, -0.06, 0.4, 7.2, 0.3, -0.009, 0.1, 3.1, 0.83, -0.05, 3.7, 0.7, 0.2, 11, 339, 198)
params12r <- c(1, 4, 0.8, 0.3, 3, 0.8)
params12gs <- c(1.2, 0.8, 0.6, 1.3, 0.6, 1.1, 0.6, 3) # M1=1, M2=1
params13gsr <- c(1.3, 2.2, 1.4, 0.8, 2.4, 4.6, 0.4, 0.25, 0.15, 20) # M1=2, M2=1
g_norm <- function(r) cbind(r^2-1, r^3, r^4-3)
omega_n11t <- getOmega(VIX, 1, 1, params11t, model="StMAR", g=g_norm, dim_g=3)
omega_n12 <- getOmega(VIX, 1, 2, params12, g=g_norm, dim_g=3)
omega_n12r <- getOmega(VIX, 1, 2, params12r, restricted=TRUE, g=g_norm, dim_g=3)
omega_n23t <- getOmega(VIX, 2, 3, params23t, model="StMAR", g=g_norm, dim_g=3)
omega_n23gs <- getOmega(VIX, 1, c(1, 1), params12gs, model="G-StMAR", g=g_norm, dim_g=3)
omega_n13gsr <- getOmega(VIX, 1, c(2, 1), params13gsr, model="G-StMAR", restricted=TRUE, g=g_norm, dim_g=3)
omega_n11t[2, ]
omega_n12[2, 1]
omega_n12r[, 3]
omega_n23t[3, ]
omega_n23t[3, 2]
omega_n23gs[2, 3]
omega_n13gsr[1, ]
gmar23 <- GSMAR(data=VIX[120:220], p=2, M=3, params=params23, model="GMAR")
devtools::test()
devtools::test()
