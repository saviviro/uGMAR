abline(h=c(-1.96*n_obs^{-1/2}, 1.96*n_obs^{-1/2}), col=rgb(0, 0, 1, 0.8), lty=2)
}
get_qracf <- function(qresiduals) acf(qresiduals, lag.max=nlags, type="correlation", plot=FALSE)$acf[2:(nlags + 1)]
plot_qr_acf(get_qracf(qres52), plot_xlab=FALSE)
plot_qr_acf(get_qracf(qres52^2), plot_ylab=FALSE, plot_xlab=FALSE)
# mod53
plot(ts(qres53, start=c(1954, 12), frequency=12), type="l", xaxt="n", ylim=c(-3.5, 3.5)); #abline(h=c(-1.96, 0, 1.96), col=rgb(1, 0, 0, 0.4), lty=1)
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(1960, 2020, by=20), col=rgb(0.1, 0.1, 0.1, 0.2))
qqnorm(qres53, yaxt="n", ylab="", xlab="", main="", ylim=c(-3.5, 3.5), xlim=c(-3.5, 3.5), xaxt="n"); qqline(qres53, col=rgb(0, 0, 1, 0.9))
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(-3, 3, by=2), col=rgb(0.1, 0.1, 0.1, 0.2))
plot_qr_acf(get_qracf(qres53), plot_xlab=FALSE)
plot_qr_acf(get_qracf(qres53^2), plot_ylab=FALSE, plot_xlab=FALSE)
# mod53r
plot(ts(qres53r, start=c(1954, 12), frequency=12), type="l", ylim=c(-3.5, 3.5)); #abline(h=c(-1.96, 0, 1.96), col=rgb(1, 0, 0, 0.4), lty=1)
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(1960, 2020, by=20), col=rgb(0.1, 0.1, 0.1, 0.2))
qqnorm(qres53r, yaxt="n", ylab="", xlab="", main="", ylim=c(-3.5, 3.5), xlim=c(-3.5, 3.5)); qqline(qres53r, col=rgb(0, 0, 1, 0.9))
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(-3, 3, by=2), col=rgb(0.1, 0.1, 0.1, 0.2))
plot_qr_acf(get_qracf(qres53r), plot_ylab=TRUE, plot_xlab=TRUE)
plot_qr_acf(get_qracf(qres53r^2), plot_ylab=FALSE)
par(mfrow=c(3, 4), mar=c(2.1, 2.6, 0.3, 0.5))
qres52 <- mod52$quantile_residuals
qres53 <- mod53$quantile_residuals
qres53r <- mod53r$quantile_residuals
# mod52
plot(ts(qres52, start=c(1954, 12), frequency=12), type="l", ylim=c(-3.5, 3.5), xaxt="n"); #abline(h=c(-1.96, 0, 1.96), col=rgb(1, 0, 0, 0.4), lty=1)
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(1960, 2020, by=20), col=rgb(0.1, 0.1, 0.1, 0.2))
qqnorm(qres52, yaxt="n", ylab="", xlab="", main="", ylim=c(-3.5, 3.5), xlim=c(-3.5, 3.5), xaxt="n"); qqline(qres52, col=rgb(0, 0, 1, 1))
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(-3, 3, by=2), col=rgb(0.1, 0.1, 0.1, 0.2))
yaxt0 <- 0.3
ticks1 <- round(seq(-yaxt0, yaxt0, by=0.1), 1)
nlags <- 24
n_obs <- length(mod52$data)
ticks2 = seq(-yaxt0, yaxt0, by=0.05)
plot_qr_acf <- function(vals_to_plot, plot_ylab=TRUE, plot_xlab=TRUE) {
if(plot_xlab) {
plot(0, 0, type="n", yaxt="n", xlim=c(0, nlags + 0.1), ylim=c(-yaxt0, yaxt0), xlab="", ylab="", main="")
} else {
plot(0, 0, type="n", yaxt="n", xaxt="n", xlim=c(0, nlags + 0.1), ylim=c(-yaxt0, yaxt0), xlab="", ylab="", main="")
}
if(plot_ylab) axis(2, at=ticks1, labels=ticks1)
abline(h=seq(-0.3, 0.3, by=0.1), col=rgb(0.1, 0.1, 0.1, 0.2))
abline(h=0)
abline(v=seq(0, nlags, by=5), col=rgb(0.1, 0.1, 0.1, 0.2))
segments(x0=1:nlags, y0=rep(0, nlags), x1=1:nlags, y1=vals_to_plot)
points(1:nlags, vals_to_plot, pch=20, col="blue")
abline(h=c(-1.96*n_obs^{-1/2}, 1.96*n_obs^{-1/2}), col=rgb(0, 0, 1, 0.8), lty=2)
}
get_qracf <- function(qresiduals) acf(qresiduals, lag.max=nlags, type="correlation", plot=FALSE)$acf[2:(nlags + 1)]
plot_qr_acf(get_qracf(qres52), plot_xlab=FALSE)
plot_qr_acf(get_qracf(qres52^2), plot_ylab=FALSE, plot_xlab=FALSE)
# mod53
plot(ts(qres53, start=c(1954, 12), frequency=12), type="l", xaxt="n", ylim=c(-3.5, 3.5)); #abline(h=c(-1.96, 0, 1.96), col=rgb(1, 0, 0, 0.4), lty=1)
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(1960, 2020, by=20), col=rgb(0.1, 0.1, 0.1, 0.2))
qqnorm(qres53, yaxt="n", ylab="", xlab="", main="", ylim=c(-3.5, 3.5), xlim=c(-3.5, 3.5), xaxt="n"); qqline(qres53, col=rgb(0, 0, 1, 1))
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(-3, 3, by=2), col=rgb(0.1, 0.1, 0.1, 0.2))
plot_qr_acf(get_qracf(qres53), plot_xlab=FALSE)
plot_qr_acf(get_qracf(qres53^2), plot_ylab=FALSE, plot_xlab=FALSE)
# mod53r
plot(ts(qres53r, start=c(1954, 12), frequency=12), type="l", ylim=c(-3.5, 3.5)); #abline(h=c(-1.96, 0, 1.96), col=rgb(1, 0, 0, 0.4), lty=1)
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(1960, 2020, by=20), col=rgb(0.1, 0.1, 0.1, 0.2))
qqnorm(qres53r, yaxt="n", ylab="", xlab="", main="", ylim=c(-3.5, 3.5), xlim=c(-3.5, 3.5)); qqline(qres53r, col=rgb(0, 0, 1, 1))
abline(h=seq(-3, 3, by=1), col=rgb(0.1, 0.1, 0.1, 0.2)); abline(v=seq(-3, 3, by=2), col=rgb(0.1, 0.1, 0.1, 0.2))
plot_qr_acf(get_qracf(qres53r), plot_ylab=TRUE, plot_xlab=TRUE)
plot_qr_acf(get_qracf(qres53r^2), plot_ylab=FALSE)
diagnosticPlot(mod54g)
diagnosticPlot(mod61)
# Prof-log-lik
par(mar=c(2.1, 1, 1, 1), mfrow=c(4, 4))
for(i1 in 1:16) {
pars <- mod52$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=5, M=c(1, 1), params=new_pars, model="G-StMAR", conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
par(mar=c(2.1, 1, 1, 1), mfrow=c(6, 5))
p <- 5
M <- 3
for(i1 in 1:29) {
pars <- mod53$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=p, M=M, params=new_pars, model="G-StMAR", conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
M <- c(1, 2)
for(i1 in 1:29) {
pars <- mod53$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=p, M=M, params=new_pars, model="G-StMAR", conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
length(mod53r$params)
# Profile-log-likelihoods
par(mar=c(2.1, 1, 1, 1), mfrow=c(3, 5))
p <- 5
M <- c(1, 2)
for(i1 in 1:15) {
pars <- mod53r$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=p, M=M, params=new_pars, model="G-StMAR", restricted=TRUE, conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
par(mfrow=c(4, 1), mar=c(1.1, 2.1, 1.1, 2))
plot(YF)
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
cols <- c("green3", "blue3", "orange3", "red") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod54g$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod54g$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod54g$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
lines(ts(c(rep(NA, times=5), mod54g$mixing_weights[,4]), start=c(1954, 7), frequency=12), col=cols[4], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
plot(ts(c(rep(NA, times=5), mod53$total_cvars), start=c(1954, 7), frequency=12), type="l")
par(mfrow=c(4, 1), mar=c(1.1, 2.1, 1.1, 2))
plot(YF)
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
cols <- c("green3", "blue3", "orange3", "red") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53r$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53r$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53r$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
#lines(ts(c(rep(NA, times=5), mod54g$mixing_weights[,4]), start=c(1954, 7), frequency=12), col=cols[4], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
plot(ts(c(rep(NA, times=5), mod53$total_cvars), start=c(1954, 7), frequency=12), type="l")
lines(ts(c(rep(NA, times=5), mod53r$total_cvars), start=c(1954, 7), frequency=12), type="l", lty=2, col="red")
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
lines(ts(c(rep(NA, times=5), mod52$total_cvars), start=c(1954, 7), frequency=12), type="l", lty=3, col="green")
# Profile-log-likelihoods
par(mar=c(2.1, 1, 1, 1), mfrow=c(3, 5))
p <- 5
M <- c(1, 2)
for(i1 in 1:15) {
pars <- mod53r$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=p, M=M, params=new_pars, model="G-StMAR", restricted=TRUE, conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
# the estimate points a maximum point and the high FOC value is just due to error in the numerical approximation.
par(mar=c(2.1, 1, 1, 1), mfrow=c(5, 5))
for(i1 in 1:25) {
pars <- mod53$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=5, M=c(1, 2), params=new_pars, model="G-StMAR", conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
# Prof-log-lik
par(mar=c(2.1, 1, 1, 1), mfrow=c(4, 4))
for(i1 in 1:16) {
pars <- mod52$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=5, M=c(1, 1), params=new_pars, model="G-StMAR", conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
tmp <- iterate_more(mod52)
tmp$param - mod52$params
# Prof-log-lik
par(mar=c(2.1, 1, 1, 1), mfrow=c(4, 4))
for(i1 in 1:16) {
pars <- tmp$params
range <- abs(0.02*pars[i1])
vals <- seq(from=pars[i1] - range, to=pars[i1] + range, length.out=100)
logliks <- vapply(vals, function(new_val) {
new_pars <- pars
new_pars[i1] <- new_val
loglikelihood_int(data=YF, p=5, M=c(1, 1), params=new_pars, model="G-StMAR", conditional=FALSE, boundaries=TRUE, minval=NA)
}, numeric(1))
plot(x=vals, y=logliks, type="l"); abline(v=pars[i1], col="red")
}
tmp$loglik - mod52$loglik
plot(mod54g)
diagnosticPlot(mod54g)
draw_poly <- function(from, to) {
polygon(x=c(from, to, to, from), y=c(-6, -6, 2, 2), col=grDevices::rgb(0.1, 0.1, 0.1, 0.15), border=NA)
}
layout(mat=matrix(c(1, 3, 2, 3), nrow=2, byrow=TRUE), widths=c(2, 1))
#par(mar=c(2.1, 2.6, 1.1, 2.6), mfrow=c(2, 1), las=1)
par(las=1, mar=c(2.1, 2.1, 0.3, 0.3))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
times <- time(USREC)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
#par(new=TRUE)
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
# mod53 density plot
x <- seq(-6, 2, by=0.01)
alphas <- pick_alphas(p=5, M=c(1, 2), params=mod53$params, model="G-StMAR")
means <- get_regime_means(mod53)
vars <- get_regime_vars(mod53)
dfs <- pick_dfs(p=5, M=c(1, 2), params=mod53$params, model="G-StMAR")
plot(density(YF), ylim=c(0, 2), main="", ylab="", xlab="", cex.axis=0.8, font.axis=2, yaxt="n")
#axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
lines(x=x, y=alphas[1]*dnorm(x, mean=means[1], sd=sqrt(vars[1])), type="l", lty=3, col=cols[1])
lines(x=x, y=alphas[2]*my_dt(x, mean=means[2], var=vars[2], df=dfs[1]), type="l", lty=3, col=cols[2])
lines(x=x, y=alphas[3]*my_dt(x, mean=means[3], var=vars[3], df=dfs[2]), type="l", lty=3, col=cols[3])
lines(x=x, y=mod53_dens(x), type="l", lty=2, col="darkgrey")
segments(x0=rep(-6, 5), x1=rep(-5.7, 5), y0=seq(0, 1.5, by=0.5), col="black", lwd=1)
text(x=rep(-5.3, 5), y=seq(0, 1.5, by=0.5), col="black", labels=seq(0, 1.5, by=0.5), font=2, cex=0.8)
segments(x0=rep(-5.4, 3), x1=rep(-4.8, 3), y0=seq(1.85, 2.00, length.out=3), col=rev(cols), lwd=2, lty=3)
text(x=rep(-4.0, 3), y=seq(1.85, 2.00, length.out=3), col=rev(cols), labels=rev(c("regime 1", "regime 2", "regime 3")), font=2, cex=0.75)
ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12)
## 3-month eurodollar deposit - 3-month TB
ED3 <- read.csv("C:/Users/saviviro/Downloads/fredgraph (2).csv", stringsAsFactors = FALSE)
## 3-month eurodollar deposit - 3-month TB
ED3 <- read.csv("C:/Users/saviviro/Downloads/fredgraph (1).csv", stringsAsFactors = FALSE)
ED3 <- ts(ED3[,2], start=c(1971, 1), frequency=12)
####### GMAR + G-StMAR plot
par(mfrow=c(4, 1), mar=c(1.1, 2.1, 1.1, 2))
par(las=1, mar=c(2.1, 2.1, 0.3, 0.3))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(las=1, mar=c(2.1, 2.1, 0.3, 0.3))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
par(las=1, mar=c(2.1, 2.1, 0.3, 0.3))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
times <- time(USREC)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
par(las=1, mar=c(2.1, 2.1, 0.3, 0.3))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
par(las=1, mar=c(2.1, 2.1, 0.3, 0.3))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
times <- time(USREC)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
#par(new=TRUE)
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
lines(ED)
lines(ED3)
lines(0.5*ED3)
lines(0.2*ED3)
lines(0.1*ED3)
par(mfrow=c(2, 1), mar=c(1.1, 2.1, 1.1, 2))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
times <- time(USREC)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
#par(new=TRUE)
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
lines(0.1*ED3)
par(mfrow=c(2, 1), mar=c(1.1, 2.1, 1.1, 2))
layout(mat=matrix(c(1, 3, 2, 3), nrow=2, byrow=TRUE), widths=c(2, 1))
#par(mar=c(2.1, 2.6, 1.1, 2.6), mfrow=c(2, 1), las=1)
par(las=1, mar=c(2.1, 2.1, 0.3, 0.3))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
times <- time(USREC)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
#par(new=TRUE)
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
par(mfrow=c(2, 1), mar=c(1.1, 2.1, 1.1, 2))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
times <- time(USREC)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
#par(new=TRUE)
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
lines(0.2*ED3, lwd=2)
ED3C <- read.csv("C:/Users/saviviro/Downloads/fredgraph (2).csv", stringsAsFactors = FALSE)
ED3C <- ts(ED3C[,2], start=c(1982, 1), frequency=12)
lines(0.2*ED3C, lwd=2, col="coral")
par(mfrow=c(2, 1), mar=c(2.6, 2.1, 1.1, 2))
plot(FEDFUNDS, col="violet", lty=3, main="", ylab="", xlab="", xaxt="n", yaxt="n", ylim=c(0, 20))
abline(h=0, col="grey", lty=2)
#axis(side=2, pos=1954, col.axis="slateblue", col.ticks="slateblue", col="slateblue", lty=1, font=2, cex.axis=0.8, xaxt="n")
segments(x0=rep(1950, 5), x1=rep(1953, 5), y0=seq(0, 20, by=5), col="violet", lwd=1)
text(x=rep(1954, 5), y=seq(0, 20, by=5), col="violet", labels=seq(0, 20, by=5), font=2, cex=0.8)
#axis(side=4, col.axis="coral", col.ticks="coral", col="slateblue", lty=3, font=2, cex.axis=0.8)
lines(TB3MS, col="orange", lty=3)
par(new=TRUE)
plot(YF, type="n", main="", ylab="", xlab="", xaxt="n", yaxt="n")
abline(h=0, col="grey", lty=2)
lines(YF)
#axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), labels=NA, lty=1, font=1, cex.axis=1)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
times <- time(USREC)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
#par(new=TRUE)
cols <- c("red3", "green3", "blue3") # coral, slateblue, orange, springgreen4
plot(ts(c(rep(NA, times=5), mod53$mixing_weights[,1]), start=c(1954, 7), frequency=12), type="l", col=cols[1], ylim=c(0, 1), lty=3, ylab=NA, xaxt="n", yaxt="n")
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,2]), start=c(1954, 7), frequency=12), col=cols[2], lty=3)
lines(ts(c(rep(NA, times=5), mod53$mixing_weights[,3]), start=c(1954, 7), frequency=12), col=cols[3], lty=3)
axis(side=2, col.axis="black", col.ticks="black", col="black", lty=1, font=2, cex.axis=0.8)
axis(side=1, col.axis="black", col.ticks="black", col="black", at=seq(1960, 2020, by=10), lty=1, font=1, cex.axis=1)
froms <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1-1] == 0), TRUE, FALSE), logical(1))]
tos <- times[vapply(2:length(USREC), function(i1) ifelse((USREC[i1] == 1 & USREC[i1+1] == 0), TRUE, FALSE), logical(1))]
for(i1 in 1:length(tos)) draw_poly(from=froms[i1], to=tos[i1])
lines(0.2*ED3, lwd=2)
lines(0.2*ED3C, lwd=2, col="coral")
axis(1, at=seq(1970, 1990, by=2))
w <-
1
p <- 12
p <- 1
r <- 0.05
w + w/(1+r)
w + (1 + r)*w
w/(1+r)
1-1.05*1.1
1-1.05*0.1
1-1.05*0.5
1+1.05*0.8
1/1.5
(2 + 1/1.5)/0.5
1/0.5
1/1.5
2/0.5
1/0.2
1/0.25
1/0.5
setwd("~/uGMAR")
devtools::load_all()
devtools::spell_check()
install.packages("spelling")
devtools::spell_check()
devtools::document()
install.packages("devtools")
